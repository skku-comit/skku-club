datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

generator zod {
    provider         = "zod-prisma-types"
    output           = "../lib/prisma/zod"
    createInputTypes = false
    addIncludeType   = false
    addSelectType    = false
}

enum UserRole {
    USER
    ADMIN
}

model User {
    id              BigInt           @id @default(autoincrement())
    auth0Id         String           @unique
    email           String           @unique
    emailVerified   Boolean          @default(false)
    role            UserRole         @default(USER)
    name            String?
    avatarUrl       String?
    githubUsername  String?
    createdAt       DateTime         @default(now())
    updatedAt       DateTime         @updatedAt
    clubMemberships ClubMembership[]
    NoticePost      NoticePost[]
}

model Club {
    id          BigInt           @id @default(autoincrement())
    name        String
    slug        String           @unique
    memberships ClubMembership[]
    createdAt   DateTime         @default(now())
    updatedAt   DateTime         @updatedAt
}

enum ClubMemberRole {
    MEMBER
    OWNER
}

model ClubMembership {
    id        BigInt         @id @default(autoincrement())
    club      Club           @relation(fields: [clubId], references: [id], onDelete: Cascade)
    clubId    BigInt
    user      User           @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId    BigInt
    role      ClubMemberRole @default(MEMBER)
    createdAt DateTime       @default(now())
    updatedAt DateTime       @updatedAt

    @@unique([clubId, userId])
}

model NoticePost {
    id          Int      @id @default(autoincrement())
    title       String
    content     String
    author      User     @relation(fields: [authorId], references: [id])
    authorId    BigInt
    published   Boolean  @default(false)
    publishedAt DateTime @default(now())
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}
